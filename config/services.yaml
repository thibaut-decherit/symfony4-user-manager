imports:
  - resource: response_header_setter/response_headers.yaml
  - resource: response_header_setter/content_security_policy.yaml

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  account_deletion_token_lifetime: 3600 # seconds
  bcrypt_cost: 13
  email_change_request_send_email_again_delay: 120 # seconds
  email_change_token_lifetime: 3600 # seconds
  password_reset_request_send_email_again_delay: 120 # seconds
  password_reset_token_lifetime: 3600 # seconds

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false # Allows optimizing the container by removing unused services; this also means
                  # fetching services directly from the container via $container->get() won't work.
                  # The best practice is to be explicit about your dependencies anyway.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Model,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  mailer.service:
    public: true
    class: App\Service\MailerService
    arguments:
      $mailerAddress: '%env(MAILER_SENDER)%'
      $replyToAddress: '%env(MAILER_REPLY_TO)%'
  App\Service\MailerService: '@mailer.service'

  kernel.listener.redirect_if_authenticated:
    class: App\EventListener\RedirectIfAuthenticated
    tags:
      - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

  kernel.listener.response_header_setter:
    class: App\EventListener\ResponseHeaderSetter\ResponseHeaderSetter
    arguments:
      $kernelEnvironment: '%kernel.environment%'
      $simpleHeaders: '%response_headers%'
      $requestStack: '@request_stack'
      $cspConfig: '%content_security_policy%'
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

  app.on_auth_password_rehash_if_cost_change:
    class: App\EventListener\OnAuthPasswordRehashIfCostChange
    arguments:
      $cost: '%bcrypt_cost%'
    tags:
      - { name: kernel.event_listener, event: security.interactive_login, lazy: true }

  security.logout.handler.account_deletion:
    class: App\Security\AccountDeletionLogoutHandler
    arguments:
      $sessionLogoutHandler: '@security.logout.handler.session'
